{"version":3,"sources":["component/map.js","component/player.js","date.js","App.js","serviceWorker.js","index.js"],"names":["$","ready","startX","startY","scrollLeft","scrollTop","slider","isDown","mouseup","mousedown","e","pageX","offset","left","pageY","top","mousemove","preventDefault","walkX","walkY","mouseleave","Map","className","width","src","process","alt","id","Component","Player","mystyle","backgroundColor","this","props","date","color","style","character","name","money","href","Dates","App","players","map","playerDate","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","error","console","message"],"mappings":"uRAGAA,IAAE,YAAYC,OAAM,WAElB,IAEIC,EACAC,EACAC,EACAC,EALEC,EAASN,IAAE,iBACbO,GAAS,EAObD,EAAOE,SAAQ,WACbD,GAAS,KAERE,WAAU,SAAUC,GACrBH,GAAS,EAETL,EAASQ,EAAEC,MAAQL,EAAOM,SAASC,KACnCT,EAAaE,EAAOF,aAEpBD,EAASO,EAAEI,MAAQR,EAAOM,SAASG,IACnCV,EAAYC,EAAOD,eAGlBW,WAAU,SAAUN,GACrB,GAAKH,EAAL,CACAG,EAAEO,iBAEF,IACMC,EApBG,GAmBCR,EAAEC,MAAQL,EAAOM,SAASC,KACjBX,GACnBI,EAAOF,WAAWA,EAAac,GAE/B,IACMC,EAxBG,GAuBET,EAAEI,MAAQR,EAAOM,SAASG,IAClBZ,GACnBG,EAAOD,UAAUA,EAAYc,OAG5BC,YAAW,WACZb,GAAS,Q,IAqBEc,E,iLAbX,OACE,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,OACb,yBAAKC,MAAM,OAAOC,IAAKC,mBAAsCC,IAAI,QACjE,yBAAKC,GAAG,cAAR,cACA,yBAAKA,GAAG,eAAR,eACA,yBAAKA,GAAG,WAAR,WACA,yBAAKA,GAAG,YAAR,kB,GAVQC,aCvBHC,E,iLAjBP,IAAMC,EAAU,CACZC,gBAAiBC,KAAKC,MAAMC,KAAKC,OAErC,OACI,yBAAKb,UAAU,SAASc,MAAON,GAC3B,4BAAKE,KAAKC,MAAMC,KAAKG,WACrB,4BACI,sCAAYL,KAAKC,MAAMC,KAAKI,MAC5B,sCAAYN,KAAKC,MAAMC,KAAKK,OAC5B,4BACI,uBAAGC,KAAM,IAAMR,KAAKC,MAAMC,KAAKP,IAA/B,qB,GAZHC,aCsCNa,EAxCD,CACV,QAAW,CACP,CACI,UAAa,WACb,KAAQ,OACR,MAAS,IACT,GAAM,aACN,MAAQ,QAEZ,CACI,UAAa,WACb,KAAQ,QACR,MAAS,IACT,GAAM,cACN,MAAQ,UAEZ,CACI,UAAa,WACb,KAAQ,YACR,MAAS,IACT,GAAM,WACN,MAAQ,SAEZ,CACI,UAAa,WACb,KAAQ,SACR,MAAS,IACT,GAAM,UACN,MAAQ,QAEZ,CACI,UAAa,WACb,KAAQ,SACR,MAAS,IACT,GAAM,WACN,MAAQ,SCGLC,MAhCf,WACE,IAAMC,EAAUT,EAAKS,QAAQC,KAAI,SAACC,GAAD,OAAgB,kBAAC,EAAD,CAAQC,IAAMD,EAAWlB,GAAIO,KAAMW,OAEpF,OACE,6BACE,yBAAKvB,UAAU,mBACZqB,GAEH,kBAAC,EAAD,QCHcI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcxD,MACrByD,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.985346a1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport $ from \"jquery\";\n$('document').ready(function () {\n\n  const slider = $('.mapcontainer');\n  let isDown = false;\n  let startX;\n  let startY\n  let scrollLeft;\n  let scrollTop;\n  let fast = 2;\n\n  slider.mouseup(function () {\n    isDown = false;\n\n  }).mousedown(function (e) {\n    isDown = true;\n    //holizontal\n    startX = e.pageX - slider.offset().left;\n    scrollLeft = slider.scrollLeft();\n    //vectial\n    startY = e.pageY - slider.offset().top;\n    scrollTop = slider.scrollTop();\n\n\n  }).mousemove(function (e) {\n    if (!isDown) return;\n    e.preventDefault();\n    //holizontal\n    const x = e.pageX - slider.offset().left;\n    const walkX = (x - startX) * fast; //scroll-fast\n    slider.scrollLeft(scrollLeft - walkX)  //slider.scrollLeft =  scrollLeft - walk;\n    //vectial\n    const y =  e.pageY - slider.offset().top;\n    const walkY = (y - startY) * fast; //scroll-fast\n    slider.scrollTop(scrollTop - walkY) ;\n\n\n  }).mouseleave(function () {\n    isDown = false;\n  })\n});\n\n\nclass Map extends Component {\n\n  render() {\n    return (\n      <div className=\"mapcontainer\">\n        <div className=\"map\">\n          <img width=\"100%\" src={process.env.PUBLIC_URL + '/map.png'}  alt=\"map\" />\n          <div id=\"bottomLeft\">bottomLeft</div>\n          <div id=\"bottomRight\">bottomRight</div>\n          <div id=\"topLeft\">topLeft</div>\n          <div id=\"topRight\">topRight</div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Map; // Don’t forget to use export default!","import React, { Component } from 'react';\nimport '../App.css';\n\nclass Player extends Component {\n    render() {\n        const mystyle = {\n            backgroundColor: this.props.date.color,\n        }\n        return (\n            <div className=\"player\" style={mystyle}>\n                <h3>{this.props.date.character}</h3>\n                <ul>\n                    <li>name : {this.props.date.name}</li>\n                    <li>money: {this.props.date.money}</li>\n                    <li>\n                        <a href={\"#\" + this.props.date.id}>bottomLeft</a>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\nexport default Player; // Don’t forget to use export default!","\nconst Dates = {\n    \"players\": [\n        {\n            \"character\": \"Player 1\",\n            \"name\": \"Joan\",\n            \"money\": 1000,\n            \"id\": \"bottomLeft\",\n            \"color\":\"#FFC\"\n        },\n        {\n            \"character\": \"Player 2\",\n            \"name\": \"David\",\n            \"money\": 2000,\n            \"id\": \"bottomRight\",\n            \"color\":\"yellow\"\n        },\n        {\n            \"character\": \"Player 3\",\n            \"name\": \"Alejandro\",\n            \"money\": 3000,\n            \"id\": \"topRight\",\n            \"color\":\"green\"\n        },\n        {\n            \"character\": \"Player 4\",\n            \"name\": \"Victor\",\n            \"money\": 4000,\n            \"id\": \"topLeft\",\n            \"color\":\"blue\"\n        },\n        {\n            \"character\": \"Player 5\",\n            \"name\": \"Victor\",\n            \"money\": 4000,\n            \"id\": \"topLeft2\",\n            \"color\":\"red\"\n        },\n    ],\n};\n\nexport default Dates;","import React from 'react';\n//import logo from './logo.svg';\nimport Map from './component/map'\nimport './App.css';\nimport Player from './component/player'\nimport date from './date'\n\nfunction App() {\n  const players = date.players.map((playerDate) => <Player key ={playerDate.id} date={playerDate}/> );\n\n  return (\n    <div>\n      <div className=\"playerContainer\">\n        {players}\n      </div>\n      <Map />\n    </div>\n\n    /*\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n    */\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}